eval "$(rbenv init -)"
rbenv shell 2.7.0
gem install
bundle exec jekyll serve

Logo Font: Wyvern wings



# How did I set my cloudfront

make travis upload to s3
use cloudfront to s3
	- Create two origins
		1. for s3 html objects
		2. For s3 assets directory
	- create two behaviours
		1. for normal html pages - cache for 1 hour
		2. for assets - cache for 1 day

Still cache control is not set
Go to s3:
	1. Select assets folder -> more -> add metadata -> set key -> Cache-Control: 86400
	2. Select 404 and license -> Cache for oneyear


I missed a point... cloudfrot needs <domain.com>/work.html and not <domain.com>/work
So will resort to serving assets via cloudfront and use github pages.
But github pages can only use master branch to serve. 
So use travis to build _site -> upload _site to master branch, upload assets to s3 and use cloudfront there.

Setting up https for assets.ahiravan.dev
> brew install certbot
# help: https://medium.com/@deepak13245/hosting-a-https-static-websites-using-s3-and-lets-encrypt-6f3e53014ff2
# explore: https://etherarp.net/lets-encrypt-and-amazon-s3/
> sudo certbot certonly --manual --preferred-challenges dns --email ***@gmail.com --server https://acme-v02.api.letsencrypt.org/directory --agree-tos -d '*.ahiravan.dev'


There was a problem of cross origin just for mjs file.
1. Go to cloud front cache based on headers -. white list -> Access-Control-Request-Haaders,Access-Control-Request-Method,Origin
2. Go to s3 ->cors settings:
<?xml version="1.0" encoding="UTF-8"?>
<CORSConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/">
<CORSRule>
    <AllowedOrigin>https://ahiravan.dev</AllowedOrigin>
    <AllowedMethod>GET</AllowedMethod>
    <AllowedMethod>HEAD</AllowedMethod>
    <AllowedHeader>*</AllowedHeader>
</CORSRule>
</CORSConfiguration>

